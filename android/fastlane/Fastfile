# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)


def make_qa_branch_if_needed()
     current_branch = git_branch
     puts("현재 브랜치 #{current_branch} 로 설정되어있습니다.")
end

def get_commit_log()
  last_tag = last_git_tag()
  puts "last_tag: #{last_tag}"  # This will print the value of last_tag
  changelog = changelog_from_git_commits(
    between: [last_tag, "HEAD"]
  )
  max_changelog_length = 9000
  if changelog && changelog.length > max_changelog_length
    original_length = changelog.length
    bottom_message = "..."
    changelog = "#{changelog[0...max_changelog_length - bottom_message.length]}#{bottom_message}"
  end
  log = """
#{Time.now.strftime('%F %T')}
#{changelog}
"""
  return log
end

platform :android do
  desc "Runs all the tests"
  lane :test do
    make_qa_branch_if_needed()
    get_commit_log()
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Increment version code"
   lane :increment_vc do
   increment_version_code(
         gradle_file_path: "./app/build.gradle",
   )
   end

  desc "Lane for distribution"
    lane :distribute do
        gradle(task: "clean")
        gradle(
            task: "assemble",
            build_type: "Release"
        )

        make_qa_branch_if_needed()
        release_notes = get_commit_log()

        firebase_app_distribution(
            app: ENV['FIREBASE_APP_ID'],
            firebase_cli_token: ENV['FIREBASE_CLI_TOKEN'],
            android_artifact_path: ENV['STG_APK_PATH'],
            groups: EVN['GROUPS'],
            release_notes: release_notes,
            debug:true
        )

  end

end
